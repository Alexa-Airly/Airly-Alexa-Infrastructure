os: linux
language: shell

stages:
  - name: Test template
  - name: Deploy infra
  
services:
  - docker

install:
  - sudo apt-add-repository "deb http://archive.ubuntu.com/ubuntu trusty-backports main restricted universe multiverse"
  - sudo apt-get -qq update


jobs:
  include:
    - stage: Test template
      script:
        - echo "Check for commit ${TRAVIS_COMMIT} and tag ${TRAVIS_TAG} from branch ${TRAVIS_BRANCH}."
        - echo "This is build number ${TRAVIS_BUILD_NUMBER}, for ${TRAVIS_REPO_SLUG}."
        - docker pull almerhor/cfmlint:latest
        - docker run --rm -v $(pwd)/:/lintfiles cfnlinter -t template_cloudformation.yml
    - stage: Deploy infra
      script:
        - echo "Feeding CloudFormation template with variables."
        - sed -i -e "s/STATETABLENAME/${terraform_table}/g" template_cloudformation.yml
        - sed -i -e "s/STATEBUCKETNAME/${terraform_bucket}/g" template_cloudformation.yml
        - sed -i -e "s/ARTIFACTBUCKETNAME/${artifact_bucket}/g" template_cloudformation.yml
        - sed -i -e "s/AIRLYTABLE/${dynamodb_airly}/g" template_cloudformation.yml
        - sed -i -e "s/ACCOUNTNUMBER/${account_number}/g" template_cloudformation.yml
      deploy:
        provider: Cloudformation
        edge: true # use DPLv2
        access_key_id: ${AWS_ACCESS_KEY_ID}
        secret_access_key: ${AWS_SECRET_ACCESS_KEY}
        capabilities: CAPABILITY_NAMED_IAM
        template: template_cloudformation.yml
        stack_name: Alexa-Airly-Infrastructure
        region: ${terraform_region}
        wait: true
        promote: true